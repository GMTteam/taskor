diff --git a/node_modules/react-native-checkbox-reanimated/src/animated-stroke.tsx b/node_modules/react-native-checkbox-reanimated/src/animated-stroke.tsx
index 7a331c4..2d5cb0d 100644
--- a/node_modules/react-native-checkbox-reanimated/src/animated-stroke.tsx
+++ b/node_modules/react-native-checkbox-reanimated/src/animated-stroke.tsx
@@ -11,12 +11,15 @@ const AnimatedPath = Animated.createAnimatedComponent(Path)
 const AnimatedStroke = ({ progress, ...pathProps }: AnimatedStrokeProps) => {
   const [length, setLength] = useState(0)
   const ref = useRef<typeof AnimatedPath>(null)
+  const bezierEasing = Easing.bezier(0.37, 0, 0.63, 1).factory(); // Tạo ra hàm easing từ Easing.bezier
+
   const animatedProps = useAnimatedProps(() => ({
     strokeDashoffset: Math.max(
       0,
-      length - length * Easing.bezier(0.37, 0, 0.63, 1)(progress.value) - 0.1
+      length - length * bezierEasing(progress.value) - 0.1
     )
-  }))
+  }));
+  
 
   return (
     <AnimatedPath
diff --git a/node_modules/react-native-checkbox-reanimated/src/index.tsx b/node_modules/react-native-checkbox-reanimated/src/index.tsx
index afcd68d..26fdeec 100644
--- a/node_modules/react-native-checkbox-reanimated/src/index.tsx
+++ b/node_modules/react-native-checkbox-reanimated/src/index.tsx
@@ -39,22 +39,26 @@ const AnimatedCheckbox = (props: Props) => {
   }, [checked])
 
   const animatedBoxProps = useAnimatedProps(
-    () => ({
-      stroke: interpolateColor(
-        Easing.bezier(0.16, 1, 0.3, 1)(progress.value),
-        [0, 1],
-        [boxOutlineColor, highlightColor],
-        'RGB'
-      ),
-      fill: interpolateColor(
-        Easing.bezier(0.16, 1, 0.3, 1)(progress.value),
-        [0, 1],
-        ['#00000000', highlightColor],
-        'RGB'
-      )
-    }),
+    () => {
+      const easing = Easing.bezier(0.16, 1, 0.3, 1).factory(); // Tạo ra hàm easing
+      return {
+        stroke: interpolateColor(
+          easing(progress.value), // Sử dụng hàm easing tạo ra
+          [0, 1],
+          [boxOutlineColor, highlightColor],
+          'RGB'
+        ),
+        fill: interpolateColor(
+          easing(progress.value), // Sử dụng hàm easing tạo ra
+          [0, 1],
+          ['#00000000', highlightColor],
+          'RGB'
+        )
+      };
+    },
     [highlightColor, boxOutlineColor]
-  )
+  );
+  
 
   return (
     <Svg
